{
  "contractName": "LocalAsset",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "freeze",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "thaw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "freezeAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "thawAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "freezer",
          "type": "address"
        }
      ],
      "name": "setTeam",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "setMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearMetadata",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezeAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"name\":\"setMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"freezer\",\"type\":\"address\"}],\"name\":\"setTeam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"thaw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thawAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Moonbeam Team\",\"details\":\"Contract to pilot the ERC20 contract.\",\"kind\":\"dev\",\"methods\":{\"burn(address,uint256)\":{\"custom:selector\":\"9dc29fac\",\"details\":\"Burn tokens from an address\",\"params\":{\"from\":\"address The address from which you want to burn tokens\",\"value\":\"uint256 the amount of tokens to be burnt\"}},\"clearMetadata()\":{\"custom:selector\":\"efb6d432\",\"details\":\"Clear the name, symbol and decimals of your asset\"},\"freeze(address)\":{\"custom:selector\":\"8d1fdf2f\",\"details\":\"Freeze an account, preventing it from operating with the asset\",\"params\":{\"account\":\"address The address that you want to freeze\"}},\"freezeAsset()\":{\"custom:selector\":\"d4937f51\",\"details\":\"Freeze the entire asset operations\"},\"mint(address,uint256)\":{\"custom:selector\":\"40c10f19\",\"details\":\"Mint tokens to an address\",\"params\":{\"to\":\"address The address to which you want to mint tokens\",\"value\":\"uint256 the amount of tokens to be minted\"}},\"setMetadata(string,string,uint8)\":{\"custom:selector\":\"37d2c2f4\",\"details\":\"Specify the name, symbol and decimals of your asset\",\"params\":{\"decimals\":\"uint8 The number of decimals of your asset\",\"name\":\"string The name of the asset\",\"symbol\":\"string The symbol of the asset\"}},\"setTeam(address,address,address)\":{\"custom:selector\":\"c7d93c59\",\"details\":\"Specify the issuer, admin and freezer of an asset\",\"params\":{\"admin\":\"address The address capable of burning tokens and unfreezing accounts/assets\",\"freezer\":\"address The address capable of freezing accounts/asset\",\"issuer\":\"address The address capable of issuing tokens\"}},\"thaw(address)\":{\"custom:selector\":\"5ea20216\",\"details\":\"Unfreeze an account, letting it from operating againt with the asset\",\"params\":{\"account\":\"address The address that you want to unfreeze\"}},\"thawAsset()\":{\"custom:selector\":\"51ec2ad7\",\"details\":\"Unfreeze the entire asset operations\"},\"transferOwnership(address)\":{\"custom:selector\":\"f2fde38b\",\"details\":\"Transfer the ownership of an asset to a new account\",\"params\":{\"owner\":\"address The address of the new owner\"}}},\"title\":\"Extension of the ERC20 interface that allows an owner\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IPrecompileERC20.sol\":\"LocalAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/IPrecompileERC20.sol\":{\"keccak256\":\"0xb84cb3cf350490e000db2d76d3b8989c4eb2f5324d6f0f5a45180d485339cd03\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://2122482ac5f1d5e4a8cd78b92fa0aa715a6ec57d0a1e89b06c74211c7f9fc129\",\"dweb:/ipfs/Qmb3v6XFHUNtSieGcHR47xADXQuc7r91L5is97xaUgeZA3\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.8.3;\n\n/// @title ERC20 interface\n/// @dev see https://github.com/ethereum/EIPs/issues/20\n/// @dev copied from https://github.com/OpenZeppelin/openzeppelin-contracts\ninterface IERC20Precompile {\n    /// @dev Returns the name of the token.\n    /// @custom:selector 06fdde03\n    function name() external view returns (string memory);\n\n    /// @dev Returns the symbol of the token.\n    /// @custom:selector 95d89b41\n    function symbol() external view returns (string memory);\n\n    /// @dev Returns the decimals places of the token.\n    /// @custom:selector 313ce567\n    function decimals() external view returns (uint8);\n\n    /// @dev Total number of tokens in existence\n    /// @custom:selector 18160ddd\n    function totalSupply() external view returns (uint256);\n\n    /// @dev Gets the balance of the specified address.\n    /// @custom:selector 70a08231\n    /// @param who The address to query the balance of.\n    /// @return An uint256 representing the amount owned by the passed address.\n    function balanceOf(address who) external view returns (uint256);\n\n    /// @dev Function to check the amount of tokens that an owner allowed to a spender.\n    /// @custom:selector dd62ed3e\n    /// @param owner address The address which owns the funds.\n    /// @param spender address The address which will spend the funds.\n    /// @return A uint256 specifying the amount of tokens still available for the spender.\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Transfer token for a specified address\n    /// @custom:selector a9059cbb\n    /// @param to The address to transfer to.\n    /// @param value The amount to be transferred.\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /// @dev Approve the passed address to spend the specified amount of tokens on behalf\n    /// of msg.sender.\n    /// Beware that changing an allowance with this method brings the risk that someone may\n    /// use both the old\n    /// and the new allowance by unfortunate transaction ordering. One possible solution to\n    /// mitigate this race condition is to first reduce the spender's allowance to 0 and set\n    /// the desired value afterwards:\n    /// https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    /// @custom:selector 095ea7b3\n    /// @param spender The address which will spend the funds.\n    /// @param value The amount of tokens to be spent.\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /// @dev Transfer tokens from one address to another\n    /// @custom:selector 23b872dd\n    /// @param from address The address which you want to send tokens from\n    /// @param to address The address which you want to transfer to\n    /// @param value uint256 the amount of tokens to be transferred\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) external returns (bool);\n\n    /// @dev Event emited when a transfer has been performed.\n    /// @custom:selector ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /// @param from address The address sending the tokens\n    /// @param to address The address receiving the tokens.\n    /// @param value uint256 The amount of tokens transfered.\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /// @dev Event emited when an approval has been registered.\n    /// @custom:selector 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n    /// @param owner address Owner of the tokens.\n    /// @param spender address Allowed spender.\n    /// @param value uint256 Amount of tokens approved.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}\n\n/// @author The Moonbeam Team\n/// @title Extension of the ERC20 interface that allows an owner\n/// @dev Contract to pilot the ERC20 contract.\ninterface LocalAsset {\n    /// @dev Mint tokens to an address\n    /// @custom:selector 40c10f19\n    /// @param to address The address to which you want to mint tokens\n    /// @param value uint256 the amount of tokens to be minted\n    function mint(address to, uint256 value) external returns (bool);\n\n    /// @dev Burn tokens from an address\n    /// @custom:selector 9dc29fac\n    /// @param from address The address from which you want to burn tokens\n    /// @param value uint256 the amount of tokens to be burnt\n    function burn(address from, uint256 value) external returns (bool);\n\n    /// @dev Freeze an account, preventing it from operating with the asset\n    /// @custom:selector 8d1fdf2f\n    /// @param account address The address that you want to freeze\n    function freeze(address account) external returns (bool);\n\n    /// @dev Unfreeze an account, letting it from operating againt with the asset\n    /// @custom:selector 5ea20216\n    /// @param account address The address that you want to unfreeze\n    function thaw(address account) external returns (bool);\n\n    /// @dev Freeze the entire asset operations\n    /// @custom:selector d4937f51\n    function freezeAsset() external returns (bool);\n\n    /// @dev Unfreeze the entire asset operations\n    /// @custom:selector 51ec2ad7\n    function thawAsset() external returns (bool);\n\n    /// @dev Transfer the ownership of an asset to a new account\n    /// @custom:selector f2fde38b\n    /// @param owner address The address of the new owner\n    function transferOwnership(address owner) external returns (bool);\n\n    /// @dev Specify the issuer, admin and freezer of an asset\n    /// @custom:selector c7d93c59\n    /// @param issuer address The address capable of issuing tokens\n    /// @param admin address The address capable of burning tokens and unfreezing accounts/assets\n    /// @param freezer address The address capable of freezing accounts/asset\n    function setTeam(\n        address issuer,\n        address admin,\n        address freezer\n    ) external returns (bool);\n\n    /// @dev Specify the name, symbol and decimals of your asset\n    /// @custom:selector 37d2c2f4\n    /// @param name string The name of the asset\n    /// @param symbol string The symbol of the asset\n    /// @param decimals uint8 The number of decimals of your asset\n    function setMetadata(\n        string calldata name,\n        string calldata symbol,\n        uint8 decimals\n    ) external returns (bool);\n\n    /// @dev Clear the name, symbol and decimals of your asset\n    /// @custom:selector efb6d432\n    function clearMetadata() external returns (bool);\n}\n\n/// @title IPrecompileERC20 - Combined interface for 3DPass ERC20 precompiles\n/// @dev This interface combines IERC20Precompile and LocalAsset interfaces\n/// @dev representing the complete interface of 3DPass ERC20 precompiles\ninterface IPrecompileERC20 is IERC20Precompile, LocalAsset {\n    // All functions from IERC20Precompile and LocalAsset are inherited\n} ",
  "sourcePath": "/Users/jm/3DP-bridge/counterstake-bridge/evm/contracts/IPrecompileERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/IPrecompileERC20.sol",
    "exportedSymbols": {
      "IERC20Precompile": [
        9810
      ],
      "IPrecompileERC20": [
        9904
      ],
      "LocalAsset": [
        9898
      ]
    },
    "id": 9905,
    "license": "GPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9716,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:24:25"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20Precompile",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9717,
          "nodeType": "StructuredDocumentation",
          "src": "67:159:25",
          "text": "@title ERC20 interface\n @dev see https://github.com/ethereum/EIPs/issues/20\n @dev copied from https://github.com/OpenZeppelin/openzeppelin-contracts"
        },
        "fullyImplemented": false,
        "id": 9810,
        "linearizedBaseContracts": [
          9810
        ],
        "name": "IERC20Precompile",
        "nameLocation": "236:16:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 9718,
              "nodeType": "StructuredDocumentation",
              "src": "259:73:25",
              "text": "@dev Returns the name of the token.\n @custom:selector 06fdde03"
            },
            "functionSelector": "06fdde03",
            "id": 9723,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "346:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "350:2:25"
            },
            "returnParameters": {
              "id": 9722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9721,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9723,
                  "src": "376:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9720,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:15:25"
            },
            "scope": 9810,
            "src": "337:54:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9724,
              "nodeType": "StructuredDocumentation",
              "src": "397:75:25",
              "text": "@dev Returns the symbol of the token.\n @custom:selector 95d89b41"
            },
            "functionSelector": "95d89b41",
            "id": 9729,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "486:6:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "492:2:25"
            },
            "returnParameters": {
              "id": 9728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9727,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9729,
                  "src": "518:13:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:15:25"
            },
            "scope": 9810,
            "src": "477:56:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9730,
              "nodeType": "StructuredDocumentation",
              "src": "539:84:25",
              "text": "@dev Returns the decimals places of the token.\n @custom:selector 313ce567"
            },
            "functionSelector": "313ce567",
            "id": 9735,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "637:8:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:2:25"
            },
            "returnParameters": {
              "id": 9734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9735,
                  "src": "671:5:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9732,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "670:7:25"
            },
            "scope": 9810,
            "src": "628:50:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9736,
              "nodeType": "StructuredDocumentation",
              "src": "684:78:25",
              "text": "@dev Total number of tokens in existence\n @custom:selector 18160ddd"
            },
            "functionSelector": "18160ddd",
            "id": 9741,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "776:11:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "787:2:25"
            },
            "returnParameters": {
              "id": 9740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9739,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9741,
                  "src": "813:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9738,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "812:9:25"
            },
            "scope": 9810,
            "src": "767:55:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9742,
              "nodeType": "StructuredDocumentation",
              "src": "828:221:25",
              "text": "@dev Gets the balance of the specified address.\n @custom:selector 70a08231\n @param who The address to query the balance of.\n @return An uint256 representing the amount owned by the passed address."
            },
            "functionSelector": "70a08231",
            "id": 9749,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1063:9:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9744,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "1081:3:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9749,
                  "src": "1073:11:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:13:25"
            },
            "returnParameters": {
              "id": 9748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9749,
                  "src": "1109:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1109:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1108:9:25"
            },
            "scope": 9810,
            "src": "1054:64:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9750,
              "nodeType": "StructuredDocumentation",
              "src": "1124:342:25",
              "text": "@dev Function to check the amount of tokens that an owner allowed to a spender.\n @custom:selector dd62ed3e\n @param owner address The address which owns the funds.\n @param spender address The address which will spend the funds.\n @return A uint256 specifying the amount of tokens still available for the spender."
            },
            "functionSelector": "dd62ed3e",
            "id": 9759,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1480:9:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9752,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1498:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9759,
                  "src": "1490:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9754,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1513:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9759,
                  "src": "1505:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1505:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1489:32:25"
            },
            "returnParameters": {
              "id": 9758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9759,
                  "src": "1569:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1568:9:25"
            },
            "scope": 9810,
            "src": "1471:107:25",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9760,
              "nodeType": "StructuredDocumentation",
              "src": "1584:178:25",
              "text": "@dev Transfer token for a specified address\n @custom:selector a9059cbb\n @param to The address to transfer to.\n @param value The amount to be transferred."
            },
            "functionSelector": "a9059cbb",
            "id": 9769,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1776:8:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9762,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1793:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9769,
                  "src": "1785:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1785:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9764,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1805:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9769,
                  "src": "1797:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1784:27:25"
            },
            "returnParameters": {
              "id": 9768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9767,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9769,
                  "src": "1830:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9766,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1830:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1829:6:25"
            },
            "scope": 9810,
            "src": "1767:69:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9770,
              "nodeType": "StructuredDocumentation",
              "src": "1842:674:25",
              "text": "@dev Approve the passed address to spend the specified amount of tokens on behalf\n of msg.sender.\n Beware that changing an allowance with this method brings the risk that someone may\n use both the old\n and the new allowance by unfortunate transaction ordering. One possible solution to\n mitigate this race condition is to first reduce the spender's allowance to 0 and set\n the desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @custom:selector 095ea7b3\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent."
            },
            "functionSelector": "095ea7b3",
            "id": 9779,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2530:7:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9772,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2546:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9779,
                  "src": "2538:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9774,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2563:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9779,
                  "src": "2555:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9773,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2555:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:32:25"
            },
            "returnParameters": {
              "id": 9778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9779,
                  "src": "2588:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2588:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2587:6:25"
            },
            "scope": 9810,
            "src": "2521:73:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9780,
              "nodeType": "StructuredDocumentation",
              "src": "2600:297:25",
              "text": "@dev Transfer tokens from one address to another\n @custom:selector 23b872dd\n @param from address The address which you want to send tokens from\n @param to address The address which you want to transfer to\n @param value uint256 the amount of tokens to be transferred"
            },
            "functionSelector": "23b872dd",
            "id": 9791,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2911:12:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9782,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2941:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9791,
                  "src": "2933:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2933:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9784,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2963:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9791,
                  "src": "2955:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2955:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9786,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2983:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9791,
                  "src": "2975:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2975:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2923:71:25"
            },
            "returnParameters": {
              "id": 9790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9791,
                  "src": "3013:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9788,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3012:6:25"
            },
            "scope": 9810,
            "src": "2902:117:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9792,
              "nodeType": "StructuredDocumentation",
              "src": "3025:328:25",
              "text": "@dev Event emited when a transfer has been performed.\n @custom:selector ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n @param from address The address sending the tokens\n @param to address The address receiving the tokens.\n @param value uint256 The amount of tokens transfered."
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 9800,
            "name": "Transfer",
            "nameLocation": "3364:8:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9794,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3389:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9800,
                  "src": "3373:20:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9796,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3411:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9800,
                  "src": "3395:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3395:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9798,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3423:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9800,
                  "src": "3415:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3415:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3372:57:25"
            },
            "src": "3358:72:25"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9801,
              "nodeType": "StructuredDocumentation",
              "src": "3436:303:25",
              "text": "@dev Event emited when an approval has been registered.\n @custom:selector 8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n @param owner address Owner of the tokens.\n @param spender address Allowed spender.\n @param value uint256 Amount of tokens approved."
            },
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 9809,
            "name": "Approval",
            "nameLocation": "3750:8:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9803,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3784:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "3768:21:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3768:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9805,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "3815:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "3799:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3799:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9807,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3840:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9809,
                  "src": "3832:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3758:93:25"
            },
            "src": "3744:108:25"
          }
        ],
        "scope": 9905,
        "src": "226:3628:25",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "LocalAsset",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9811,
          "nodeType": "StructuredDocumentation",
          "src": "3856:142:25",
          "text": "@author The Moonbeam Team\n @title Extension of the ERC20 interface that allows an owner\n @dev Contract to pilot the ERC20 contract."
        },
        "fullyImplemented": false,
        "id": 9898,
        "linearizedBaseContracts": [
          9898
        ],
        "name": "LocalAsset",
        "nameLocation": "4008:10:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 9812,
              "nodeType": "StructuredDocumentation",
              "src": "4025:202:25",
              "text": "@dev Mint tokens to an address\n @custom:selector 40c10f19\n @param to address The address to which you want to mint tokens\n @param value uint256 the amount of tokens to be minted"
            },
            "functionSelector": "40c10f19",
            "id": 9821,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "4241:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9814,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4254:2:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "4246:10:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4246:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9816,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4266:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "4258:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4258:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4245:27:25"
            },
            "returnParameters": {
              "id": 9820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9821,
                  "src": "4291:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9818,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4291:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4290:6:25"
            },
            "scope": 9898,
            "src": "4232:65:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9822,
              "nodeType": "StructuredDocumentation",
              "src": "4303:207:25",
              "text": "@dev Burn tokens from an address\n @custom:selector 9dc29fac\n @param from address The address from which you want to burn tokens\n @param value uint256 the amount of tokens to be burnt"
            },
            "functionSelector": "9dc29fac",
            "id": 9831,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "4524:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9824,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4537:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9831,
                  "src": "4529:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4529:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9826,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "4551:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9831,
                  "src": "4543:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4543:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4528:29:25"
            },
            "returnParameters": {
              "id": 9830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9831,
                  "src": "4576:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4575:6:25"
            },
            "scope": 9898,
            "src": "4515:67:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9832,
              "nodeType": "StructuredDocumentation",
              "src": "4588:172:25",
              "text": "@dev Freeze an account, preventing it from operating with the asset\n @custom:selector 8d1fdf2f\n @param account address The address that you want to freeze"
            },
            "functionSelector": "8d1fdf2f",
            "id": 9839,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freeze",
            "nameLocation": "4774:6:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9834,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4789:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9839,
                  "src": "4781:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4781:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4780:17:25"
            },
            "returnParameters": {
              "id": 9838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9839,
                  "src": "4816:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9836,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4816:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4815:6:25"
            },
            "scope": 9898,
            "src": "4765:57:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9840,
              "nodeType": "StructuredDocumentation",
              "src": "4828:180:25",
              "text": "@dev Unfreeze an account, letting it from operating againt with the asset\n @custom:selector 5ea20216\n @param account address The address that you want to unfreeze"
            },
            "functionSelector": "5ea20216",
            "id": 9847,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "thaw",
            "nameLocation": "5022:4:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9842,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5035:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9847,
                  "src": "5027:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5027:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5026:17:25"
            },
            "returnParameters": {
              "id": 9846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9845,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9847,
                  "src": "5062:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9844,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5062:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5061:6:25"
            },
            "scope": 9898,
            "src": "5013:55:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9848,
              "nodeType": "StructuredDocumentation",
              "src": "5074:77:25",
              "text": "@dev Freeze the entire asset operations\n @custom:selector d4937f51"
            },
            "functionSelector": "d4937f51",
            "id": 9853,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "freezeAsset",
            "nameLocation": "5165:11:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5176:2:25"
            },
            "returnParameters": {
              "id": 9852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9851,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9853,
                  "src": "5197:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9850,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5197:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5196:6:25"
            },
            "scope": 9898,
            "src": "5156:47:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9854,
              "nodeType": "StructuredDocumentation",
              "src": "5209:79:25",
              "text": "@dev Unfreeze the entire asset operations\n @custom:selector 51ec2ad7"
            },
            "functionSelector": "51ec2ad7",
            "id": 9859,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "thawAsset",
            "nameLocation": "5302:9:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5311:2:25"
            },
            "returnParameters": {
              "id": 9858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9857,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9859,
                  "src": "5332:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9856,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5332:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5331:6:25"
            },
            "scope": 9898,
            "src": "5293:45:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9860,
              "nodeType": "StructuredDocumentation",
              "src": "5344:152:25",
              "text": "@dev Transfer the ownership of an asset to a new account\n @custom:selector f2fde38b\n @param owner address The address of the new owner"
            },
            "functionSelector": "f2fde38b",
            "id": 9867,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "5510:17:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9862,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5536:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9867,
                  "src": "5528:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5528:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5527:15:25"
            },
            "returnParameters": {
              "id": 9866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9867,
                  "src": "5561:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9864,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5561:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5560:6:25"
            },
            "scope": 9898,
            "src": "5501:66:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9868,
              "nodeType": "StructuredDocumentation",
              "src": "5573:336:25",
              "text": "@dev Specify the issuer, admin and freezer of an asset\n @custom:selector c7d93c59\n @param issuer address The address capable of issuing tokens\n @param admin address The address capable of burning tokens and unfreezing accounts/assets\n @param freezer address The address capable of freezing accounts/asset"
            },
            "functionSelector": "c7d93c59",
            "id": 9879,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setTeam",
            "nameLocation": "5923:7:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9870,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "5948:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9879,
                  "src": "5940:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5940:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9872,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "5972:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9879,
                  "src": "5964:13:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5964:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9874,
                  "mutability": "mutable",
                  "name": "freezer",
                  "nameLocation": "5995:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9879,
                  "src": "5987:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5987:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5930:78:25"
            },
            "returnParameters": {
              "id": 9878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9879,
                  "src": "6027:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9876,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6027:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6026:6:25"
            },
            "scope": 9898,
            "src": "5914:119:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9880,
              "nodeType": "StructuredDocumentation",
              "src": "6039:263:25",
              "text": "@dev Specify the name, symbol and decimals of your asset\n @custom:selector 37d2c2f4\n @param name string The name of the asset\n @param symbol string The symbol of the asset\n @param decimals uint8 The number of decimals of your asset"
            },
            "functionSelector": "37d2c2f4",
            "id": 9891,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMetadata",
            "nameLocation": "6316:11:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9882,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "6353:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9891,
                  "src": "6337:20:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9881,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6337:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9884,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "6383:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9891,
                  "src": "6367:22:25",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9883,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6367:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9886,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nameLocation": "6405:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 9891,
                  "src": "6399:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 9885,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6399:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6327:92:25"
            },
            "returnParameters": {
              "id": 9890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9889,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9891,
                  "src": "6438:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9888,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6438:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6437:6:25"
            },
            "scope": 9898,
            "src": "6307:137:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9892,
              "nodeType": "StructuredDocumentation",
              "src": "6450:92:25",
              "text": "@dev Clear the name, symbol and decimals of your asset\n @custom:selector efb6d432"
            },
            "functionSelector": "efb6d432",
            "id": 9897,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "clearMetadata",
            "nameLocation": "6556:13:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6569:2:25"
            },
            "returnParameters": {
              "id": 9896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9895,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9897,
                  "src": "6590:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9894,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6590:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6589:6:25"
            },
            "scope": 9898,
            "src": "6547:49:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9905,
        "src": "3998:2600:25",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9900,
              "name": "IERC20Precompile",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9810,
              "src": "6857:16:25"
            },
            "id": 9901,
            "nodeType": "InheritanceSpecifier",
            "src": "6857:16:25"
          },
          {
            "baseName": {
              "id": 9902,
              "name": "LocalAsset",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9898,
              "src": "6875:10:25"
            },
            "id": 9903,
            "nodeType": "InheritanceSpecifier",
            "src": "6875:10:25"
          }
        ],
        "canonicalName": "IPrecompileERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9899,
          "nodeType": "StructuredDocumentation",
          "src": "6600:227:25",
          "text": "@title IPrecompileERC20 - Combined interface for 3DPass ERC20 precompiles\n @dev This interface combines IERC20Precompile and LocalAsset interfaces\n @dev representing the complete interface of 3DPass ERC20 precompiles"
        },
        "fullyImplemented": false,
        "id": 9904,
        "linearizedBaseContracts": [
          9904,
          9898,
          9810
        ],
        "name": "IPrecompileERC20",
        "nameLocation": "6837:16:25",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 9905,
        "src": "6827:134:25",
        "usedErrors": []
      }
    ],
    "src": "41:6921:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-08-05T14:26:19.517Z",
  "devdoc": {
    "author": "The Moonbeam Team",
    "details": "Contract to pilot the ERC20 contract.",
    "kind": "dev",
    "methods": {
      "burn(address,uint256)": {
        "custom:selector": "9dc29fac",
        "details": "Burn tokens from an address",
        "params": {
          "from": "address The address from which you want to burn tokens",
          "value": "uint256 the amount of tokens to be burnt"
        }
      },
      "clearMetadata()": {
        "custom:selector": "efb6d432",
        "details": "Clear the name, symbol and decimals of your asset"
      },
      "freeze(address)": {
        "custom:selector": "8d1fdf2f",
        "details": "Freeze an account, preventing it from operating with the asset",
        "params": {
          "account": "address The address that you want to freeze"
        }
      },
      "freezeAsset()": {
        "custom:selector": "d4937f51",
        "details": "Freeze the entire asset operations"
      },
      "mint(address,uint256)": {
        "custom:selector": "40c10f19",
        "details": "Mint tokens to an address",
        "params": {
          "to": "address The address to which you want to mint tokens",
          "value": "uint256 the amount of tokens to be minted"
        }
      },
      "setMetadata(string,string,uint8)": {
        "custom:selector": "37d2c2f4",
        "details": "Specify the name, symbol and decimals of your asset",
        "params": {
          "decimals": "uint8 The number of decimals of your asset",
          "name": "string The name of the asset",
          "symbol": "string The symbol of the asset"
        }
      },
      "setTeam(address,address,address)": {
        "custom:selector": "c7d93c59",
        "details": "Specify the issuer, admin and freezer of an asset",
        "params": {
          "admin": "address The address capable of burning tokens and unfreezing accounts/assets",
          "freezer": "address The address capable of freezing accounts/asset",
          "issuer": "address The address capable of issuing tokens"
        }
      },
      "thaw(address)": {
        "custom:selector": "5ea20216",
        "details": "Unfreeze an account, letting it from operating againt with the asset",
        "params": {
          "account": "address The address that you want to unfreeze"
        }
      },
      "thawAsset()": {
        "custom:selector": "51ec2ad7",
        "details": "Unfreeze the entire asset operations"
      },
      "transferOwnership(address)": {
        "custom:selector": "f2fde38b",
        "details": "Transfer the ownership of an asset to a new account",
        "params": {
          "owner": "address The address of the new owner"
        }
      }
    },
    "title": "Extension of the ERC20 interface that allows an owner",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}